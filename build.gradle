/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.7/samples
 */

// This is not working, just legacy applying plugin method, not injecting dependencies
//buildscript {
//    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.3.1"
//        classpath "org.openapitools:openapi-generator-gradle-plugin:7.2.0"
//    }
//}

plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
//    id 'org.springframework.boot' version '3.2.1'
//////    id 'io.spring.dependency-management'
//    id 'org.openapi.generator' version '7.2.0'
}

//apply plugin: 'io.spring.dependency-management'
//
//// https://stackoverflow.com/a/55731664
//dependencyManagement {
//    imports {
//        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
//    }
//}

group = 'com.siukatech.poc'
version = '0.0.1-SNAPSHOT'

ext {
    springBootVersion = '3.2.1'
    springSecurityVersion = '6.2.1'
    openapiGeneratorVersion = '7.2.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    // import dependencies, copy the legacy name to find the group:artifactId:version
    // Reference:
    // https://discuss.gradle.org/t/standalone-plugin-to-apply-and-import-3rd-party-plugins/34397/4
    //
    // Springframework version will affect the project which applied this plugin
    implementation "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    implementation "org.springframework.security:spring-security-test:${springSecurityVersion}"
    implementation "org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}"

//    api "org.springframework.boot:spring-boot-dependencies:3.2.1"
//
//	testFixtures 'org.springframework.boot:spring-boot-starter-test:3.2.1'
//	testFixtures 'org.springframework.security:spring-security-test:6.2.1'
//	testFixtures 'com.h2database:h2:2.1.214'

}

gradlePlugin {
    plugins {
        myPlugin {
            id = 'com.siukatech.poc.react-backend-plugin'
            implementationClass = 'com.siukatech.poc.react.backend.plugin.ReactBackendPlugin'
        }
    }
}

// disable publishing for jenkins testing
publishing {
    repositories {
        maven {
            // buildDir -> project.layout.buildDirectory.getAsFile().get().path
            url = "${project.layout.buildDirectory.getAsFile().get().path}/repo"
        }
    }
    publications {
        privateMaven(MavenPublication) {
            def artifactIdStr = "$project.name"
            groupId "$project.group"
            version "$project.version"
            artifactId "$artifactIdStr"
//			from components.javaPlatform
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = "$artifactId"
                description = "$artifactId"
            }

        }
    }
    if (project.hasProperty("platformSnapshotUri")) {
        repositories {
//			def publishingUri = project.hasProperty("platformSnapshotUri") ? "$platformSnapshotUri" : ""
            maven {
                name = 'platformSnapshot'
                allowInsecureProtocol = true
                credentials(PasswordCredentials)
                url = uri("$platformSnapshotUri")
            }
        }
    }
}
// disable publishing for jenkins testing


